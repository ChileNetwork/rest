diff --git a/features/api/programmer.feature b/features/api/programmer.feature
index dac11bd..5980364 100644
--- a/features/api/programmer.feature
+++ b/features/api/programmer.feature
@@ -58,6 +58,5 @@ Feature: Programmer
       }
       """
     When I request "PUT /api/programmers/CowboyCoder"
-    And print last response
     Then the response status code should be 200
     And the "avatarNumber" property should equal "2"
diff --git a/src/KnpU/CodeBattle/Controller/Api/ProgrammerController.php b/src/KnpU/CodeBattle/Controller/Api/ProgrammerController.php
index 2e3b65b..a46235f 100644
--- a/src/KnpU/CodeBattle/Controller/Api/ProgrammerController.php
+++ b/src/KnpU/CodeBattle/Controller/Api/ProgrammerController.php
@@ -25,12 +25,8 @@ class ProgrammerController extends BaseController
 
     public function newAction(Request $request)
     {
-        $data = json_decode($request->getContent(), true);
-
-        $programmer = new Programmer($data['nickname'], $data['avatarNumber']);
-        $programmer->tagLine = $data['tagLine'];
-        $programmer->userId = $this->findUserByUsername('weaverryan')->id;
-
+        $programmer = new Programmer();
+        $this->handleRequest($request, $programmer);
         $this->save($programmer);
 
         $data = $this->serializeProgrammer($programmer);
@@ -80,15 +76,7 @@ class ProgrammerController extends BaseController
             $this->throw404();
         }
 
-        throw new \Exception('This is scary!');
-
-        $data = json_decode($request->getContent(), true);
-
-        $programmer->nickname = $data['nickname'];
-        $programmer->avatarNumber = $data['avatarNumber'];
-        $programmer->tagLine = $data['tagLine'];
-        $programmer->userId = $this->findUserByUsername('weaverryan')->id;
-
+        $this->handleRequest($request, $programmer);
         $this->save($programmer);
 
         $data = $this->serializeProgrammer($programmer);
@@ -98,6 +86,26 @@ class ProgrammerController extends BaseController
         return $response;
     }
 
+    /**
+     * Reads data from the Request, updates the Programmer and saves it.
+     *
+     * @param Request $request
+     * @param Programmer $programmer
+     */
+    private function handleRequest(Request $request, Programmer $programmer)
+    {
+        $data = json_decode($request->getContent(), true);
+
+        if ($data === null) {
+            throw new \Exception(sprintf('Invalid JSON: '.$request->getContent()));
+        }
+
+        $programmer->nickname = $data['nickname'];
+        $programmer->avatarNumber = $data['avatarNumber'];
+        $programmer->tagLine = $data['tagLine'];
+        $programmer->userId = $this->findUserByUsername('weaverryan')->id;
+    }
+
     private function serializeProgrammer(Programmer $programmer)
     {
         return array(
