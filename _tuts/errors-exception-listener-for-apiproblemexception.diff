diff --git a/src/KnpU/CodeBattle/Application.php b/src/KnpU/CodeBattle/Application.php
index 2d4e0f6..585abe6 100644
--- a/src/KnpU/CodeBattle/Application.php
+++ b/src/KnpU/CodeBattle/Application.php
@@ -5,6 +5,7 @@ namespace KnpU\CodeBattle;
 use Doctrine\Common\Annotations\AnnotationReader;
 use Doctrine\Common\Annotations\CachedReader;
 use Doctrine\Common\Cache\PhpFileCache;
+use KnpU\CodeBattle\Api\ApiProblemException;
 use KnpU\CodeBattle\Battle\PowerManager;
 use KnpU\CodeBattle\Repository\BattleRepository;
 use KnpU\CodeBattle\Repository\ProjectRepository;
@@ -23,6 +24,7 @@ use KnpU\CodeBattle\Repository\UserRepository;
 use KnpU\CodeBattle\Repository\ProgrammerRepository;
 use KnpU\CodeBattle\Battle\BattleManager;
 use Silex\Provider\ValidatorServiceProvider;
+use Symfony\Component\HttpFoundation\JsonResponse;
 use Symfony\Component\Validator\Mapping\ClassMetadataFactory;
 use Symfony\Component\Validator\Mapping\Loader\AnnotationLoader;
 
@@ -36,6 +38,7 @@ class Application extends SilexApplication
         $this->configureProviders();
         $this->configureServices();
         $this->configureSecurity();
+        $this->configureListeners();
     }
 
     /**
@@ -211,4 +214,22 @@ class Application extends SilexApplication
             return is_object($user) ? $user : null;
         });
     }
+
+    private function configureListeners()
+    {
+        $this->error(function(\Exception $e, $statusCode) {
+            // only do something special if we have an ApiProblemException!
+            if (!$e instanceof ApiProblemException) {
+                return;
+            }
+
+            $response = new JsonResponse(
+                $e->getApiProblem()->toArray(),
+                $statusCode
+            );
+            $response->headers->set('Content-Type', 'application/problem+json');
+
+            return $response;
+        });
+    }
 } 
\ No newline at end of file
